# Generated by Django 2.2.4 on 2019-12-17 10:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(default='0', max_length=2)),
                ('pic_profile', models.ImageField(blank=True, null=True, upload_to='pic_profile/%Y/%m/%d/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='İstanbul', max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirm', models.BooleanField(default=False)),
                ('count', models.PositiveIntegerField(default=0)),
                ('active_count', models.PositiveIntegerField(default=0)),
                ('sos', models.BooleanField(default=False)),
                ('sos_reason', models.CharField(default='0', max_length=2)),
                ('sos_result', models.CharField(default='0', max_length=2)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StandardPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_courier', models.PositiveIntegerField(default=0)),
                ('price', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user_company', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='user_company', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Courier',
            fields=[
                ('user_courier', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='user_courier', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('state', models.CharField(default='0', max_length=2)),
                ('queue', models.IntegerField(default=0)),
                ('latitude', models.DecimalField(decimal_places=12, default='0.0', max_digits=16)),
                ('longitude', models.DecimalField(decimal_places=12, default='0.0', max_digits=16)),
                ('active_worker', models.BooleanField(default=True)),
                ('tel_no', models.CharField(default='', max_length=10)),
                ('pin', models.CharField(default='', max_length=6)),
                ('registered_restaurants', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('device_platform', models.CharField(choices=[('0', 'Android'), ('1', 'IOS')], default='0', max_length=1)),
                ('device_id', models.CharField(default='0', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Kadıköy', max_length=80)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ilce_il', to='kurye.City')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_type', models.CharField(default='0', max_length=2)),
                ('full_name', models.CharField(default='', max_length=60)),
                ('tel_no', models.CharField(default='', max_length=10)),
                ('address', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(decimal_places=12, default='0.0', max_digits=16)),
                ('longitude', models.DecimalField(decimal_places=12, default='0.0', max_digits=16)),
                ('non_delivery_reason', models.CharField(default='0', max_length=2)),
                ('non_payment_reason', models.CharField(default='0', max_length=2)),
                ('sos_reason', models.CharField(default='0', max_length=2)),
                ('sos_result', models.CharField(default='0', max_length=2)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_delivery', to='kurye.Delivery')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notif_type', models.CharField(default='0', max_length=2)),
                ('message', models.TextField(blank=True, null=True)),
                ('viewed', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Fenerbahçe', max_length=80)),
                ('Town', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mahalle_ilce', to='kurye.Town')),
            ],
        ),
        migrations.CreateModel(
            name='AddedPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_courier', models.PositiveIntegerField(default=0)),
                ('price', models.PositiveIntegerField(default=0)),
                ('standard_price', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='addedprice_standardprice', to='kurye.StandardPrice')),
            ],
        ),
        migrations.CreateModel(
            name='Tip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('courier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tip_courier', to='kurye.Courier')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('user_restaurant', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='user_restaurant', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=80)),
                ('tel_no', models.CharField(default='', max_length=10)),
                ('second_tel', models.CharField(default='', max_length=10)),
                ('allow_self_delivery', models.BooleanField(default=False)),
                ('registered_couriers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('adress', models.TextField()),
                ('district', models.CharField(max_length=80)),
                ('town', models.CharField(max_length=80)),
                ('city', models.CharField(max_length=80)),
                ('latitude', models.DecimalField(decimal_places=12, default='0.0', max_digits=16)),
                ('longitude', models.DecimalField(decimal_places=12, default='0.0', max_digits=16)),
                ('doc_1', models.ImageField(blank=True, null=True, upload_to='belge_1/%Y/%m/%d/')),
                ('doc_2', models.ImageField(blank=True, null=True, upload_to='belge_2/%Y/%m/%d/')),
                ('doc_3', models.ImageField(blank=True, null=True, upload_to='belge_3/%Y/%m/%d/')),
                ('doc_4', models.ImageField(blank=True, null=True, upload_to='belge_4/%Y/%m/%d/')),
                ('doc_5', models.ImageField(blank=True, null=True, upload_to='belge_5/%Y/%m/%d/')),
                ('doc_6', models.ImageField(blank=True, null=True, upload_to='belge_6/%Y/%m/%d/')),
                ('doc_7', models.ImageField(blank=True, null=True, upload_to='belge_7/%Y/%m/%d/')),
                ('doc_8', models.ImageField(blank=True, null=True, upload_to='belge_8/%Y/%m/%d/')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='kurye.Company')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceTotal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(default=0)),
                ('month', models.PositiveIntegerField(default=0)),
                ('paid', models.BooleanField(blank=True)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoicetotal_restaurant', to='kurye.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(default=0)),
                ('month', models.PositiveIntegerField(default=0)),
                ('max_courier', models.PositiveIntegerField(default=0)),
                ('standard_addition', models.BooleanField(blank=True, null=True)),
                ('added_person', models.PositiveIntegerField(default=0)),
                ('added_total', models.PositiveIntegerField(default=0)),
                ('standard_amount', models.PositiveIntegerField(default=0)),
                ('added_amount', models.PositiveIntegerField(default=0)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoicedetail_restaurant', to='kurye.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='ExtraCourier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_courier', models.PositiveIntegerField(default=0)),
                ('amount_extra_courier', models.PositiveIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('courier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='extracourier_courier', to='kurye.Courier')),
            ],
        ),
        migrations.AddField(
            model_name='delivery',
            name='courier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='delivery_courier', to='kurye.Courier'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='delivery_restaurant', to='kurye.Restaurant'),
        ),
        migrations.AddField(
            model_name='courier',
            name='active_delivery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='active_delivery', to='kurye.Delivery'),
        ),
        migrations.AddField(
            model_name='courier',
            name='active_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='active_order', to='kurye.Order'),
        ),
        migrations.AddField(
            model_name='courier',
            name='active_restaurant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='active_restaurant', to='kurye.Restaurant'),
        ),
    ]
